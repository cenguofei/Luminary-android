plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "org.jetbrains.kotlin.kapt"
}

android {
    namespace 'com.example.lunimary'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.lunimary"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.4"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def lifecycle_version = "2.7.0"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    implementation 'androidx.activity:activity-compose:1.8.2'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation("androidx.compose.animation:animation:1.6.3")
    implementation "androidx.core:core-splashscreen:1.0.1"

    def accompanist = "0.33.2-alpha"
    implementation "com.google.accompanist:accompanist-systemuicontroller:${accompanist}"

    def markdown = "0.4.1"
    implementation "com.github.jeziellago:compose-markdown:${markdown}"

    def compose_matisse = "1.1.4"
    implementation("io.github.leavesczy:matisse:${compose_matisse}")

    def coilVersion = "2.5.0"
    implementation "io.coil-kt:coil-compose:$coilVersion"


    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    def ktor_version= "2.3.7"
    //core
    implementation "io.ktor:ktor-client-core:$ktor_version"
    //OkHttp Engine, support websocket and http2
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation("io.ktor:ktor-client-content-negotiation:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")
    implementation "io.ktor:ktor-client-auth:$ktor_version"

    // Local storage
    implementation 'com.tencent:mmkv:1.3.3'

    def lottieVersion = "6.3.0"
    implementation "com.airbnb.android:lottie-compose:$lottieVersion"

    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'io.github.kevinnzou:compose-webview:0.33.4'
}